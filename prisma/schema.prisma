generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// BUSINESS MODEL
model Business {
  id          String   @id @default(cuid())
  name        String
  type        String
  address     String
  areaId      String
  areaName    String
  powerType   String
  hasPower    Boolean
  ownerId     String
  verified    Boolean  @default(false)
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String?
  owner       User     @relation(fields: [ownerId], references: [id])
  Review      Review[]
}

model Review {
  id         String   @id @default(cuid())
  business   Business @relation(fields: [businessId], references: [id])
  businessId String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  rating     Int
  comment    String
  createdAt  DateTime @default(now())
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String     @unique
  emailVerified DateTime?
  image         String?
  role          String     @default("CUSTOMER") // "CUSTOMER" or "BUSINESS_OWNER"
  accounts      Account[]
  sessions      Session[]
  businesses    Business[] // Business owners can have multiple businesses
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  Review        Review[]
}
